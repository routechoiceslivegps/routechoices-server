#!/bin/sh

set -e

project_name=${COMPOSE_PROJECT_NAME:-routechoices}
extra_args=''

if [ "$1" = 'rebuild' ]; then
    shift
    "$0" stop $@
    "$0" rm -f $@
    "$0" build $@
    "$0" up -d $@
    exit
elif [ "$1" = 'exec' -a $# -eq 2 ]; then
    extra_args="$* /bin/bash"
    shift 2
elif [ "$1" = 'pipcompile' ]; then
    echo "Compiling pip env..."
    docker exec -u root -i rc_django \
        pip --no-cache-dir install -U uv
    docker exec -u root -i rc_django \
        uv pip compile requirements.in --upgrade --no-header --no-annotate -o requirements.txt
    exit 0
elif [ "$1" = 'pipinstall' ]; then
    echo "Updating pip env..."
    docker exec -u root -i rc_django \
        pip --no-cache-dir install -U uv
    docker exec -u root -i rc_django \
        uv pip install -r requirements.txt
    exit 0
elif [ "$1" = 'test' ]; then
    shift
    extra_args="run --rm django pytest"
elif [ "$1" = 'testcov' ]; then
    extra_args="run --rm django pytest"
    exit 0
fi

export GROUPID=$(id -g) USERID=$(id -u)
exec docker compose \
        --file docker/docker-compose.yml \
        --project-name $project_name \
        $extra_args \
        "$@"
